{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "Wallet API docs",
    "description": "API documentation for GoIT project 'Wallet'. [Backend github repository](https://github.com/Danatey/wallet-project-goit-back)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "https://wallet-project-goit-back.herokuapp.com/"
    },
    {
      "url": "http://localhost:3001"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transactions endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Users registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Users authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "User's id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/users/google": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Google authentication",
        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with token in query). Then use GET /api/users/info",
            "content": {}
          },
          "403": {
            "description": "Not registered or registered with postman",
            "content": {}
          }
        }
      }
    },
    "/api/users/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get info about user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "About user object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get all user's transactions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AllTransactionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllTransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Create a transaction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "api/transactions/delete": {
      "delete": {
        "tags": [
          "Transaction"
        ],
        "summary": "Delete a transaction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TransactionDeleteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "api/transaction/categories": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get all information about user's transactions category",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsByCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsByCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "api/transaction/date": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get all information about user's transactions by date",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsByDateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsByDateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": [
          "name",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "format": "userName"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "required": [
          "userId",
          "email",
          "name"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "123423lk5jh34k5n3lk5ml343"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "userName"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          }
        }
      },
      "LogoutRequest": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "1242l4kn2l3k54n2345kjnblk1m24lm23"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "code": 204,
            "example": "NO CONTENT"
          }
        }
      },
      "TransactionRequest": {
        "type": "object",
        "required": [
          "userId",
          "date",
          "type",
          "category",
          "comment",
          "amount",
          "balance"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "asffyj2345rthghj"
          },
          "date": {
            "type": "string",
            "description": "Transaction's create date",
            "example": "28.11.2019"
          },
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "+"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "авто"
          },
          "comment": {
            "type": "string",
            "description": "Comment of transaction",
            "example": "Подарок"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of transaction",
            "example": 2000
          },
          "balance": {
            "type": "integer",
            "description": "User's balance",
            "example": 16000
          }
        }
      },
      "TransactionResponse": {
        "type": "object",
        "required": [
          "transactionId",
          "date",
          "type",
          "category",
          "comment",
          "amount",
          "balance"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction's id",
            "example": "124lkjdfv235"
          },
          "date": {
            "type": "string",
            "description": "Transaction's create date",
            "example": "28.11.2019"
          },
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "+"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "авто"
          },
          "comment": {
            "type": "string",
            "description": "Comment of transaction",
            "example": "Подарок"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of transaction",
            "example": 2000
          },
          "balance": {
            "type": "integer",
            "description": "Balance after add transaction",
            "example": 4600
          }
        }
      },
      "TransactionDeleteRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "1234lkj1234lkj2354kl5"
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction's id",
            "example": "9876lkj1234lkj9876k30"
          }
        }
      },
      "TransactionDeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Transaction was successfully deleted"
          },
          "success": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "AllTransactionsRequest": {
        "type": "object",
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          }
        }
      },
      "AllTransactionsResponse": {
        "type": "object",
        "required": [
          "transactions"
        ],
        "properties": {
          "transaction": {
            "type": "object",
            "description": "Array of objects with all user's transactions",
            "properties": {
              "transactionId": {
                "type": "string",
                "description": "Transaction's id",
                "example": "507f1f77bcf86cd799439011"
              },
              "date": {
                "type": "string",
                "description": "Transaction's create date",
                "example": "28.11.2019"
              },
              "type": {
                "type": "string",
                "description": "Transaction's type",
                "example": "+"
              },
              "category": {
                "type": "string",
                "description": "Transaction's category",
                "example": "авто"
              },
              "comment": {
                "type": "string",
                "description": "Comment of transaction",
                "example": "Подарок"
              },
              "amount": {
                "type": "integer",
                "description": "Amount of transaction",
                "example": 2000
              },
              "balance": {
                "type": "integer",
                "description": "Balance of user's wallet",
                "example": 3000
              }
            }
          }
        },
        "example": [
          {
            "transactionId": "507f1f77bcf86cd799439011",
            "date": [
              "28",
              "11",
              "2021"
            ],
            "type": "+",
            "category": "Машина",
            "comment": "Масло",
            "amount": 2000,
            "balance": 3000
          },
          {
            "transactionId": "409f1f77bc8f6cd794839501",
            "date": [
              "27",
              "11",
              "2021"
            ],
            "type": "-",
            "category": "Разное",
            "comment": "Подарок жене",
            "amount": 300,
            "balance": 2700
          },
          {
            "transactionId": "507f1f77bcf86cd799439011",
            "date": [
              "25",
              "11",
              "2021"
            ],
            "type": "+",
            "category": "Нерегулярный доход",
            "comment": "Подарок на ДР",
            "amount": 1000,
            "balance": 3700
          }
        ]
      },
      "TransactionsByCategoryRequest": {
        "required": [
          "userId",
          "year",
          "month"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "year": {
            "type": "integer",
            "description": "Number of year when transactions were payed",
            "example": 2021
          },
          "month": {
            "type": "integer",
            "description": "Number of month when transactions were payed",
            "example": 10
          }
        }
      },
      "TransactionsByCategoryResponse": {
        "type": "object",
        "required": [
          "transactions"
        ],
        "properties": {
          "transaction": {
            "type": "object",
            "description": "Array of objects with all categories of user's transactions",
            "properties": {
              "type": {
                "type": "string",
                "description": "Transaction's type",
                "example": "+"
              },
              "category": {
                "type": "string",
                "description": "Transaction's category",
                "example": "авто"
              },
              "amount": {
                "type": "integer",
                "description": "Amount of all user's transaction of this category",
                "example": 3400
              }
            }
          }
        },
        "example": {
          "transactions": [
            {
              "type": "+",
              "category": "авто",
              "amount": 3800
            },
            {
              "type": "-",
              "category": "Разное",
              "amount": 600
            },
            {
              "type": "+",
              "category": "Нерегулярный доход",
              "amount": 5100
            }
          ]
        }
      },
      "TransactionsByDateRequest": {
        "required": [
          "userId",
          "year",
          "month"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "year": {
            "type": "integer",
            "description": "Number of year when transactions were payed",
            "example": 2021
          },
          "month": {
            "type": "integer",
            "description": "Number of month when transactions were payed",
            "example": 10
          }
        }
      },
      "TransactionsByDateResponse": {
        "type": "object",
        "required": [
          "transactions"
        ],
        "properties": {
          "transaction": {
            "type": "object",
            "description": "Array of objects with all categories of user's transactions",
            "properties": {
              "type": {
                "type": "string",
                "description": "Transaction's type",
                "example": "+"
              },
              "category": {
                "type": "string",
                "description": "Transaction's category",
                "example": "авто"
              },
              "amount": {
                "type": "integer",
                "description": "Amount of all user's transaction of this category",
                "example": 3400
              }
            }
          }
        },
        "example": {
          "transactions": [
            {
              "type": "-",
              "category": "авто",
              "amount": 3800
            },
            {
              "type": "-",
              "category": "Разное",
              "amount": 600
            },
            {
              "type": "+",
              "category": "Нерегулярный доход",
              "amount": 5100
            }
          ]
        }
      },
      "UserInfoRequest": {
        "required": [
          "userId",
          "email",
          "token"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "example@mail.com"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "507f1f77bcf86cd799439012507f1f77bcf86cd799439012507f1f77bcf86cd799439012507f1f77bcf86cd799439012"
          }
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "required": true,
            "description": "User's email",
            "format": "email",
            "example": "example@mail.com"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "required": true,
            "example": "507f1f77bcf86cd799439012507f1f77bcf86cd799439012507f1f77bcf86cd799439012507f1f77bcf86cd799439012"
          },
          "userId": {
            "type": "string",
            "description": "User's id",
            "required": true,
            "example": "507f1f77bcf86cd799439012"
          },
          "balance": {
            "type": "integer",
            "description": "User's wallet balance",
            "default": null,
            "example": 16000
          },
          "allTransactions": {
            "type": "object",
            "description": "All user's transactions added to wallet",
            "default": null,
            "example": [
              {
                "data": "04.01.2019",
                "type": "-",
                "category": "Разное",
                "comment": "Подарок жене",
                "amount": 300,
                "balance": 6900
              },
              {
                "data": "05.01.2019",
                "type": "+",
                "category": "Регулярный доход",
                "comment": "ЗП за январь",
                "amount": 8000,
                "balance": 14900
              }
            ]
          }
        }
      }
    }
  },
  "securitySchemes": {
    "Bearer": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  }
}