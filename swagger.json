{
  "openapi": "3.0.1",
  "info": {
    "version": "2.1.1",
    "title": "Wallet API docs",
    "description": "API documentation for GoIT project 'Wallet'. [Backend github repository](https://github.com/Danatey/wallet-project-goit-back)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "https://wallet-project-goit-back.herokuapp.com/"
    },
    {
      "url": "http://localhost:3001"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transactions endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Users registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Users authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "User's id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/users/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get info about user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "About user object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get all information about user's transactions by date",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllTransactionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllTransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/create": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Create a transaction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/categories": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get all information about user's transactions category",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsByCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsByCategoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/list": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get all user's categories of transactions",
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListOfTransactionsCategoriesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfTransactionsCategoriesResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": [
          "name",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "userName"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "required": [
          "id",
          "email",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "123423lk5jh34k5n3lk5ml343"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "userName"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "refresh_token": {
            "type": "string",
            "description": "Session's refresh token",
            "example": "c3f8c5ca-c847-4dd0-9310-8801e1a84695"
          }
        }
      },
      "LogoutRequest": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "User's access_token. This token need add to headers Authorization: Bearer token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTk0YjdkYzJiMzE2NGY5MjQ4ODNjYyIsImlhdCI6MTYzNzQzNjgyNywiZXhwIjoxNjM3NDQwNDI3fQ.C-oGS_NLFxd4A7AfysfWcW9SJP1kAleytL7MYclP4Y4"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "code": 204,
            "example": "NO CONTENT"
          }
        }
      },
      "AllTransactionsRequest": {
        "required": [
          "access_token"
        ],
        "optional": [
          "year",
          "month"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "User's access_token. This token need add to headers Authorization: Bearer token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTk0YjdkYzJiMzE2NGY5MjQ4ODNjYyIsImlhdCI6MTYzNzQzNjgyNywiZXhwIjoxNjM3NDQwNDI3fQ.C-oGS_NLFxd4A7AfysfWcW9SJP1kAleytL7MYclP4Y4"
          },
          "year": {
            "type": "string",
            "description": "Optional. Number of year when transactions were payed. If the year wasn't indicated in URL-request string, the default data for the current year returned",
            "example": "2021"
          },
          "month": {
            "type": "string",
            "description": "Optional. Number of month when transactions were payed. If the month wasn't indicated in URL-request string, the default data for the current month returned",
            "example": "2"
          }
        }
      },
      "AllTransactionsResponse": {
        "type": "object",
        "required": [
          "totalDocs",
          "limit",
          "totalPages",
          "page",
          "pagingCounter",
          "hasPrevPage",
          "hasNextPage",
          "prevPage",
          "nextPage",
          "result"
        ],
        "properties": {
          "transaction": {
            "type": "object",
            "description": "Objects with all characteristics for paginate information about user's transactions and array of last one",
            "properties": {
              "totalDocs": {
                "type": "integer",
                "description": "How many transactions have user",
                "example": 4
              },
              "limit": {
                "type": "integer",
                "description": "Maximum amount of transactions which could sent server in one request",
                "example": 5
              },
              "totalPages": {
                "type": "integer",
                "description": "Amount of total pages with all transactions",
                "example": 1
              },
              "page": {
                "type": "integer",
                "description": "Number of page which was sent from server",
                "example": 1
              },
              "pagingCounter": {
                "type": "integer",
                "description": "Counter of pagination step",
                "example": 1
              },
              "hasPrevPage": {
                "type": "boolean",
                "description": "Boolean information about current page has previous page or not",
                "example": false
              },
              "hasNextPage": {
                "type": "boolean",
                "description": "Boolean information about current page has next page or not",
                "example": false
              },
              "prevPage": {
                "type": "number",
                "description": "Information about number of previous page. If you don't have previous page return null",
                "example": null
              },
              "nextPage": {
                "type": "number",
                "description": "Information about number of next page. If you don't have next page return null",
                "example": null
              },
              "result": {
                "type": "object",
                "description": "Array of transactions depending on the request parameter for date, number and page",
                "format": []
              }
            }
          }
        },
        "example": {
          "totalDocs": 4,
          "limit": 5,
          "totalPages": 1,
          "page": 1,
          "pagingCounter": 1,
          "hasPrevPage": false,
          "hasNextPage": false,
          "prevPage": null,
          "nextPage": null,
          "result": [
            {
              "amount": 50,
              "type": "+",
              "category": "Регулярный доход",
              "date": "2021-02-01",
              "balance": 50,
              "owner": "61994b7dc2b3164f924883cc",
              "createdAt": "2021-11-20T19:26:46.106Z",
              "updatedAt": "2021-11-20T19:26:46.106Z",
              "year": 2021,
              "month": 2,
              "id": "61994bf6c2b3164f924883dc"
            },
            {
              "amount": 50,
              "type": "-",
              "category": "Продукты",
              "date": "2021-02-01",
              "balance": 0,
              "owner": "61994b7dc2b3164f924883cc",
              "createdAt": "2021-11-20T19:27:14.635Z",
              "updatedAt": "2021-11-20T19:27:14.635Z",
              "year": 2021,
              "month": 2,
              "id": "61994c12c2b3164f924883e0"
            },
            {
              "amount": 500,
              "type": "+",
              "category": "Регулярный доход",
              "date": "2021-02-01",
              "balance": 500,
              "owner": "61994b7dc2b3164f924883cc",
              "createdAt": "2021-11-20T19:27:38.034Z",
              "updatedAt": "2021-11-20T19:27:38.034Z",
              "year": 2021,
              "month": 2,
              "id": "61994c2ac2b3164f924883e4"
            },
            {
              "amount": 500,
              "type": "+",
              "category": "Регулярный доход",
              "date": "2021-02-01",
              "balance": 1000,
              "owner": "61994b7dc2b3164f924883cc",
              "createdAt": "2021-11-20T19:37:20.178Z",
              "updatedAt": "2021-11-20T19:37:20.178Z",
              "year": 2021,
              "month": 2,
              "id": "61994e70df4763ac4010ed06"
            }
          ]
        }
      },
      "TransactionCreateRequest": {
        "type": "object",
        "required": [
          "access_token",
          "date",
          "type",
          "category",
          "amount"
        ],
        "properties": {
          "access_token": {
            "type": "string",
            "description": "User's access_token. This token need add to headers Authorization: Bearer token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTk0YjdkYzJiMzE2NGY5MjQ4ODNjYyIsImlhdCI6MTYzNzQzNjgyNywiZXhwIjoxNjM3NDQwNDI3fQ.C-oGS_NLFxd4A7AfysfWcW9SJP1kAleytL7MYclP4Y4"
          },
          "date": {
            "type": "string",
            "description": "Transaction's create date",
            "example": "2021-02-01"
          },
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "+"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "Регулярный доход"
          },
          "amount": {
            "type": "string",
            "description": "Amount of transaction",
            "example": "500"
          }
        }
      },
      "TransactionCreateResponse": {
        "type": "object",
        "required": [
          "amount",
          "type",
          "category",
          "date",
          "balance",
          "owner",
          "createdAt",
          "updatedAt",
          "year",
          "month",
          "id"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "description": "Amount of transaction",
            "example": 500
          },
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "+"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "Регулярный доход"
          },
          "date": {
            "type": "string",
            "description": "Transaction's create date",
            "example": "2021-02-01"
          },
          "balance": {
            "type": "number",
            "description": "User's balance after add transaction",
            "example": 1000
          },
          "owner": {
            "type": "string",
            "description": "User's id who creates this transaction",
            "example": "61994b7dc2b3164f924883cc"
          },
          "createdAt": {
            "type": "string",
            "description": "Time when transaction was created on server",
            "example": "2021-11-20T19:37:20.178Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Time when transaction was updated on server",
            "example": "2021-11-20T19:37:20.178Z"
          },
          "year": {
            "type": "integer",
            "description": "Year when transaction was payed",
            "example": 2021
          },
          "month": {
            "type": "integer",
            "description": "Month of year when transaction was payed",
            "example": 2
          },
          "id": {
            "type": "string",
            "description": "Transaction's id",
            "example": "61994e70df4763ac4010ed06"
          }
        }
      },
      "TransactionsByCategoryRequest": {
        "required": [
          "access_token"
        ],
        "optional": [
          "year",
          "month"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "User's access_token. This token need add to headers Authorization: Bearer token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTk0YjdkYzJiMzE2NGY5MjQ4ODNjYyIsImlhdCI6MTYzNzQzNjgyNywiZXhwIjoxNjM3NDQwNDI3fQ.C-oGS_NLFxd4A7AfysfWcW9SJP1kAleytL7MYclP4Y4"
          },
          "year": {
            "type": "string",
            "description": "Number of year when transactions of such category were payed. If the year wasn't indicated, then the default data for the current year returned",
            "format": "Optional. Add to URL-request string",
            "example": "2021"
          },
          "month": {
            "type": "string",
            "description": "Number of month when transactions of such category were payed. If the month wasn't indicated, then the default data for the current month returned",
            "format": "Optional. Add to URL-request string",
            "example": "2"
          }
        }
      },
      "TransactionsByCategoryResponse": {
        "type": "object",
        "required": [
          "categories"
        ],
        "properties": {
          "transaction": {
            "type": "object",
            "description": "Object of all categories of user's transactions with total amount of each category and also information about totalIncome and totalExpense",
            "properties": {
              "category and amount": {
                "type": "string and number",
                "description": "Different Transaction's category with amount",
                "example": "'Продукты': 50"
              },
              "totalIncome": {
                "type": "number",
                "description": "Amount of all user's total income",
                "example": 1050
              },
              "totalExpense": {
                "type": "number",
                "description": "Amount of all user's total expense",
                "example": 550
              }
            }
          }
        },
        "example": {
          "categories": {
            "Продукты": 50,
            "Машина": 0,
            "Забота о себе": 0,
            "Забота о детях": 0,
            "Товары для дома": 0,
            "Образование": 0,
            "Досуг": 0,
            "Другие расходы": 0,
            "totalIncome": 1050,
            "totalExpense": 50
          }
        }
      },
      "ListOfTransactionsCategoriesRequest": {
        "type": "object",
        "optional": [],
        "properties": {}
      },
      "ListOfTransactionsCategoriesResponse": {
        "type": "object",
        "required": [
          "expenses",
          "incomes"
        ],
        "properties": {
          "expenses": {
            "type": "object",
            "description": "Array of all types of user's expense categories",
            "example": [
              "Продукты",
              "Машина",
              "Забота о себе",
              "Забота о детях",
              "Товары для дома",
              "Образование",
              "Досуг",
              "Другие расходы"
            ]
          },
          "incomes": {
            "type": "object",
            "description": "Array of all types of user's income categories",
            "example": [
              "Регулярный доход",
              "Не регулярный доход"
            ]
          }
        }
      },
      "UserInfoRequest": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "User's access_token. This token need add to headers Authorization: Bearer token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTk0YjdkYzJiMzE2NGY5MjQ4ODNjYyIsImlhdCI6MTYzNzQzNjgyNywiZXhwIjoxNjM3NDQwNDI3fQ.C-oGS_NLFxd4A7AfysfWcW9SJP1kAleytL7MYclP4Y4"
          }
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "required": true,
            "description": "User's id",
            "example": "123423lk5jh34k5n3lk5ml343"
          },
          "access_token": {
            "type": "string",
            "required": true,
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "refresh_token": {
            "type": "string",
            "required": true,
            "description": "Session's refresh token",
            "example": "c3f8c5ca-c847-4dd0-9310-8801e1a84695"
          },
          "email": {
            "type": "string",
            "required": true,
            "description": "User's email",
            "example": "example@gmail.com"
          },
          "name": {
            "type": "string",
            "required": true,
            "description": "User's name",
            "example": "userName"
          },
          "balance": {
            "type": "number",
            "required": true,
            "description": "User's balance after add transaction",
            "example": 1000
          }
        }
      }
    }
  },
  "securitySchemes": {
    "Bearer": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  }
}