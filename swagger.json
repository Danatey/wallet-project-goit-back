{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Wallet API docs",
    "description": "API documentation for GoIT project 'Wallet'. [Backend github repository](https://github.com/Danatey/wallet-project-goit-back)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3001" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transactions endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google authentication",
        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with token in query). Then use GET /user/info",
            "content": {}
          },
          "403": {
            "description": "Not registered or registered with postman",
            "content": {}
          }
        }
      }
    },
    "/transaction": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Create a transaction",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewTransactionRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Successfully authenticated"
          },
          "success": {
            "type": "boolean",
            "example": "true"
          },
          "token": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },
                  "userId": {
                    "type": "string",
                    "description": "User's id",
                    "example": "507f1f77bcf86cd799439012"
                  },
                  "balance": {
                    "type": "integer",
                    "description": "User's balance",
                    "example": 18000,
                    "minimum": 0
                  }
                }
              }
            }
          }
        }
      },
      "NewTransactionRequest": {
        "type": "object",
        "required": ["date", "type", "category", "comment", "amount"],
        "properties": {
          "date": {
            "type": "array",
            "description": "Transaction's create date",
            "items": {
              "type": "string",
              "description": "Transaction's create day, month and year",
              "properties": {
                "day": {
                  "type": "string",
                  "description": "Transaction's create day",
                  "example": "28"
                },
                "month": {
                  "type": "string",
                  "description": "Transaction's create month",
                  "example": "21"
                },
                "year": {
                  "type": "string",
                  "description": "Transaction's create year",
                  "example": "2021"
                }
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "Доход"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "Машина"
          },
            "comment": {
            "type": "string",
            "description": "Comment of transaction",
            "example": "Подарок"
          },
            "amount": {
            "type": "integer",
            "description": "Amount of transaction",
            "example": 2000
          }
        }
      },
      "ChangeTransaction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "Доход"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "Машина"
          },
            "comment": {
            "type": "string",
            "description": "Comment of transaction",
            "example": "Подарок"
          },
            "amount": {
            "type": "integer",
            "description": "Amount of transaction",
            "example": 2000
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "date": {
            "type": "array",
            "description": "Transaction's create date",
            "items": {
              "type": "string",
              "description": "Transaction's create day, month and year",
              "properties": {
                "day": {
                  "type": "string",
                  "description": "Transaction's create day",
                  "example": "28"
                },
                "month": {
                  "type": "string",
                  "description": "Transaction's create month",
                  "example": "21"
                },
                "year": {
                  "type": "string",
                  "description": "Transaction's create year",
                  "example": "2021"
                }
              }
            },
            "example": [
              [
                {
                  "day": "21",
                  "month": "11",
                  "year": "2021"
                }
              ]
            ]
          }
        }
      },
      "AllTransactionsRequest": {
        "type": "array",
        "required": ["transactions"],
        "properties": {
          "transaction": {
            "type": "object",
            "description": "Array of objects with all user's transactions",
            "properties": {
              "transactionId": {
                "type": "string",
                "description": "Transaction's id",
                "example": "507f1f77bcf86cd799439011"
              },
              "date": {
            "type": "array",
            "description": "Transaction's create date",
            "items": {
              "type": "string",
              "description": "Transaction's create day, month and year",
              "properties": {
                "day": {
                  "type": "string",
                  "description": "Transaction's create day",
                  "example": "28"
                },
                "month": {
                  "type": "string",
                  "description": "Transaction's create month",
                  "example": "21"
                },
                "year": {
                  "type": "string",
                  "description": "Transaction's create year",
                  "example": "2021"
                }
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "Доход"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "Машина"
          },
            "comment": {
            "type": "string",
            "description": "Comment of transaction",
            "example": "Подарок"
          },
            "amount": {
            "type": "integer",
            "description": "Amount of transaction",
            "example": 2000
          },
            "balance": {
            "type": "integer",
            "description": "Balance of user's wallet",
            "example": 3000
          }
        }
    }
        },
        "example": {
          "transactions": [
            {
              "transactionId": "507f1f77bcf86cd799439011",
              "date": ["28", "11", "2021"],
              "type": "Доход",
              "category": "Машина",
              "comment": "Масло",
              "amount": 2000,
              "balance": 3000
            },
            {
            "transactionId": "409f1f77bc8f6cd794839501",
              "date": ["27", "11", "2021"],
              "type": "Расход",
              "category": "Разное",
              "comment": "Подарок жене",
              "amount": 300,
              "balance": 2700
            },
            {
            "transactionId": "507f1f77bcf86cd799439011",
              "date": ["25", "11", "2021"],
              "type": "Доход",
              "category": "Нерегулярный доход",
              "comment": "Подарок на ДР",
              "amount": 1000,
              "balance": 3700
            }
          ]
        }
      },
      "AllStatisticInfoResponse": {
        "type": "object",
        "required": ["transactions"],
        "properties": {
          "transaction": {
            "type": "object",
            "description": "Array of objects with all categories of user's transactions",
            "properties": {
                "type": {
            "type": "string",
            "description": "Transaction's type",
            "example": "Доход"
          },
          "category": {
            "type": "string",
            "description": "Transaction's category",
            "example": "Машина"
          },
            "amount": {
            "type": "integer",
            "description": "Amount of all user's transaction of this category",
            "example": 3400
          }
        }
    }
        },
        "example": {
          "transactions": [
            {
                "type": "Расход",
              "category": "Машина",
              "amount": 3800
            },
            {
                "type": "Расход",
              "category": "Разное",
              "amount": 600
            },
            {
                "type": "Доход",
              "category": "Нерегулярный доход",
              "amount": 5100
            }
          ]
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Successfully got all info"
          },
          "success": {
            "type": "boolean",
            "example": "true"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "userId": {
                "type": "string",
                "description": "User's id",
                "example": "507f1f77bcf86cd799439012"
              },
              "balance": {
                "type": "integer",
                "description": "User's wallet balance",
                "example": 16000
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}